{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cate","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","loading","GifGrid","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC5B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACE,sBAAMC,SAXa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAMhB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAhBhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCNdG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UAAUH,GAD3C,+DAGFI,MAAMF,GAHJ,cAGfG,EAHe,gBAIEA,EAAKC,OAJP,uBAIbC,EAJa,EAIbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVjB,kBAcdM,GAdc,4CAAH,sDCAPO,EAAc,SAAC,GAAqB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAElC,OACE,sBAAKc,UAAU,6CAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,EAAQO,QAAQ,SACpC,4BAAIP,QCFCQ,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAOxB,ECR0B,SAAEA,GAG1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNY,SAAS,IAFb,mBAAOE,EAAP,KAAcC,EAAd,KAoBA,OAfAC,qBAAU,WAENxB,EAASC,GAAWwB,MAAK,SAAAC,GAIjBH,EAAS,CACLf,KAAMkB,EACNN,SAAS,SAKtB,CAACnB,IAEGqB,EDfsBK,CAAc1B,GAAjCa,EAAZ,EAAON,KAAaY,EAApB,EAAoBA,QAGpB,OACE,qCACE,oBAAIH,UAAU,wCAAd,SAAuDhB,IAItDmB,GAAW,mBAAGH,UAAU,4BAAb,uBAGV,qBAAKA,UAAU,YAAf,SACGH,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEUnBgB,EAhCO,WAIlB,MAAoCzC,mBAAS,CAC3C,gBADF,mBAAO0C,EAAP,KAAmB3C,EAAnB,KASA,OACE,qCACE,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACG2C,EAAWnB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAEIA,SAAWA,GADNA,YCrBrB6B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3e01ce72.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport propTypes from \"prop-types\";\r\n\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cate) => [inputValue, ...cate]);\r\n      setInputValue('');\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: propTypes.func.isRequired,\r\n}\r\n","\r\n\r\nexport const getGifs = async ( category ) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=5dW9F06nv76FcogWDwAStzyeswAmVDyw`;\r\n\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n\r\n  return gifs;\r\n};\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url} ) => {\r\n    \r\n    return (\r\n      <div className=\"card animate__animated animate__fadeInDown\">\r\n        <img src={url} alt={title}  loading=\"lazy\"/>\r\n        <p>{title}</p>\r\n      </div>\r\n    );\r\n}\r\n","import React, {/*  useState, useEffect */ } from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n//import { getGifs } from \"../helpers/getGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  /* const [images, setImages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then( setImages )\r\n  }, [ category ]); */\r\n\r\n  const {data:images, loading} = useFetchGifs( category );\r\n\r\n  \r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeInDown\">{category}</h3>\r\n\r\n      {/* loading ? 'Cargando...' : 'Data cargada' */}\r\n\r\n      {loading && <p className=\"animate__lightSpeedInLeft\"> Loading </p>}\r\n\r\n      {\r\n        <div className=\"card-grid\">\r\n          {images.map((img) => (\r\n            <GifGridItem key={img.id} {...img} />\r\n          ))}\r\n        </div>\r\n      }\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs( category ).then(imgs => {\r\n\r\n           \r\n                //console.log(imgs)\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false,\r\n                })\r\n           \r\n        })\r\n\r\n    }, [category]);\r\n\r\n    return state;\r\n\r\n\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp  = () => {\r\n\r\n    //const categories = ['One punch', 'Samurai X', 'Dragon Ball'];\r\n    \r\n    const [categories, setCategories] = useState([\r\n      \"Dragon Ball\",\r\n    ]);\r\n\r\n    /* const handleAdd = () => {\r\n        //setCategories([...categories, 'Rick and Morty']);\r\n        setCategories((cate) => [...cate, \"Rick and Morty\"]);\r\n    } */\r\n\r\n    return (\r\n      <>\r\n        <h2>Gif Expert App</h2>\r\n        <AddCategory setCategories={setCategories} />\r\n        <hr />\r\n\r\n        <ol>\r\n          {categories.map((category) => \r\n            <GifGrid\r\n                key={category} \r\n                category= {category} \r\n            />\r\n          )}\r\n        </ol>\r\n      </>\r\n    );\r\n\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}